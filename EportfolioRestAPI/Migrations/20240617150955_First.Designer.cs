// <auto-generated />
using EportfolioRestAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EportfolioRestAPI.Migrations
{
    [DbContext(typeof(PortolioDbContext))]
    [Migration("20240617150955_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EportfolioRestAPI.Entities.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("EportfolioRestAPI.Entities.Information", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AboutMe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Music")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MyGear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortofolioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PortofolioId");

                    b.ToTable("Informations");
                });

            modelBuilder.Entity("EportfolioRestAPI.Entities.Portofolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortofolioName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ContactInfoId")
                        .IsUnique();

                    b.ToTable("Portofolios");
                });

            modelBuilder.Entity("EportfolioRestAPI.Entities.Information", b =>
                {
                    b.HasOne("EportfolioRestAPI.Entities.Portofolio", "Portofolio")
                        .WithMany("Informations")
                        .HasForeignKey("PortofolioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Portofolio");
                });

            modelBuilder.Entity("EportfolioRestAPI.Entities.Portofolio", b =>
                {
                    b.HasOne("EportfolioRestAPI.Entities.ContactInfo", "ContactInfo")
                        .WithOne("Portofolio")
                        .HasForeignKey("EportfolioRestAPI.Entities.Portofolio", "ContactInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContactInfo");
                });

            modelBuilder.Entity("EportfolioRestAPI.Entities.ContactInfo", b =>
                {
                    b.Navigation("Portofolio")
                        .IsRequired();
                });

            modelBuilder.Entity("EportfolioRestAPI.Entities.Portofolio", b =>
                {
                    b.Navigation("Informations");
                });
#pragma warning restore 612, 618
        }
    }
}
